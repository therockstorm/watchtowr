frameworkVersion: "=1.2.1"

service: watchtowr

provider:
  name: aws
  runtime: nodejs4.3
  region: us-west-2
  stage: ${env:NODE_ENV}
  cfLogs: true
  timeout: 6
  memorySize: 128
  custom:
    testsTable: tests-${self:provider.stage}
    testRunsTable: test-runs-${self:provider.stage}
  environment:
    TESTS_TABLE: ${self:provider.custom.testsTable}
    TEST_RUNS_TABLE: ${self:provider.custom.testRunsTable}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: 'arn:aws:dynamodb:us-west-2:111685254296:table/*'

functions:
  api:
    handler: api.handle
    events:
      - http:
          path: graphql
          method: POST
          cors: true
  runner:
    handler: runner.handle
    timeout: 300
    events:
      - schedule: rate(30 minutes)

resources:
  Resources:
    TestsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: TestId
            AttributeType: S
        KeySchema:
          - AttributeName: TestId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.custom.testsTable}
    TestRunsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: TestId
            AttributeType: S
          - AttributeName: RunId
            AttributeType: S
        KeySchema:
          - AttributeName: TestId
            KeyType: HASH
          - AttributeName: RunId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.custom.testRunsTable}
